{"version":3,"sources":["App.js"],"names":["Separator","style","styles","separator","StyleSheet","create","container","flex","justifyContent","marginHorizontal","title","textAlign","marginVertical","fixToText","flexDirection","borderBottomColor","borderBottomWidth","hairlineWidth","App","onPress","Alert","alert","color","disabled"],"mappings":"qFAAA,8DAGMA,EAAY,kBAChB,cAAC,IAAD,CAAMC,MAAOC,EAAOC,aAuDhBD,EAASE,IAAWC,OAAO,CAC/BC,UAAW,CACTC,KAAM,EACNC,eAAgB,SAChBC,iBAAkB,IAEpBC,MAAO,CACLC,UAAW,SACXC,eAAgB,GAElBC,UAAW,CACTC,cAAe,MACfN,eAAgB,iBAElBL,UAAW,CACTS,eAAgB,EAChBG,kBAAmB,UACnBC,kBAAmBZ,IAAWa,iBAInBC,IAzEH,kBACV,eAAC,IAAD,CAAcjB,MAAOC,EAAOI,UAA5B,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAML,MAAOC,EAAOQ,MAApB,+IAGA,cAAC,IAAD,CACEA,MAAM,WACNS,QAAS,kBAAMC,IAAMC,MAAM,+BAG/B,cAACrB,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAMC,MAAOC,EAAOQ,MAApB,uMAGA,cAAC,IAAD,CACEA,MAAM,WACNY,MAAM,UACNH,QAAS,kBAAMC,IAAMC,MAAM,4CAG/B,cAACrB,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAMC,MAAOC,EAAOQ,MAApB,6DAGA,cAAC,IAAD,CACEA,MAAM,WACNa,UAAQ,EACRJ,QAAS,kBAAMC,IAAMC,MAAM,+BAG/B,cAACrB,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAMC,MAAOC,EAAOQ,MAApB,iFAGA,eAAC,IAAD,CAAMT,MAAOC,EAAOW,UAApB,UACE,cAAC,IAAD,CACEH,MAAM,cACNS,QAAS,kBAAMC,IAAMC,MAAM,0BAE7B,cAAC,IAAD,CACEX,MAAM,eACNS,QAAS,kBAAMC,IAAMC,MAAM,sC","file":"static/js/app.660547af.chunk.js","sourcesContent":["import React from 'react';\nimport { StyleSheet, Button, View, SafeAreaView, Text, Alert } from 'react-native';\n\nconst Separator = () => (\n  <View style={styles.separator} />\n);\n\nconst App = () => (\n  <SafeAreaView style={styles.container}>\n    <View>\n      <Text style={styles.title}>\n        The title and onPress handler are required. It is recommended to set accessibilityLabel to help make your app usable by everyone.\n      </Text>\n      <Button\n        title=\"Press me\"\n        onPress={() => Alert.alert('Simple Button pressed')}\n      />\n    </View>\n    <Separator />\n    <View>\n      <Text style={styles.title}>\n        Adjust the color in a way that looks standard on each platform. On  iOS, the color prop controls the color of the text. On Android, the color adjusts the background color of the button.\n      </Text>\n      <Button\n        title=\"Press me\"\n        color=\"#f194ff\"\n        onPress={() => Alert.alert('Button with adjusted color pressed')}\n      />\n    </View>\n    <Separator />\n    <View>\n      <Text style={styles.title}>\n        All interaction for the component are disabled.\n      </Text>\n      <Button\n        title=\"Press me\"\n        disabled\n        onPress={() => Alert.alert('Cannot press this one')}\n      />\n    </View>\n    <Separator />\n    <View>\n      <Text style={styles.title}>\n        This layout strategy lets the title define the width of the button.\n      </Text>\n      <View style={styles.fixToText}>\n        <Button\n          title=\"Left button\"\n          onPress={() => Alert.alert('Left button pressed')}\n        />\n        <Button\n          title=\"Right button\"\n          onPress={() => Alert.alert('Right button pressed')}\n        />\n      </View>\n    </View>\n  </SafeAreaView>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    marginHorizontal: 16,\n  },\n  title: {\n    textAlign: 'center',\n    marginVertical: 8,\n  },\n  fixToText: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  separator: {\n    marginVertical: 8,\n    borderBottomColor: '#737373',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n  },\n});\n\nexport default App;"],"sourceRoot":""}