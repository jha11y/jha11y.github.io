{"version":3,"sources":["App.js"],"names":["styles","StyleSheet","create","centeredView","flex","justifyContent","alignItems","marginTop","modalView","margin","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","button","buttonOpen","buttonClose","textStyle","color","fontWeight","textAlign","modalText","marginBottom","App","useState","modalVisible","setModalVisible","style","animationType","transparent","visible","onRequestClose","Alert","alert","onPress"],"mappings":"8KAuCMA,EAASC,IAAWC,OAAO,CAC/BC,aAAc,CACZC,KAAM,EACNC,eAAgB,SAChBC,WAAY,SACZC,UAAW,IAEbC,UAAW,CACTC,OAAQ,GACRC,gBAAiB,QACjBC,aAAc,GACdC,QAAS,GACTN,WAAY,SACZO,YAAa,OACbC,aAAc,CACZC,MAAO,EACPC,OAAQ,GAEVC,cAAe,IACfC,aAAc,EACdC,UAAW,GAEbC,OAAQ,CACNT,aAAc,GACdC,QAAS,GACTO,UAAW,GAEbE,WAAY,CACVX,gBAAiB,WAEnBY,YAAa,CACXZ,gBAAiB,WAEnBa,UAAW,CACTC,MAAO,QACPC,WAAY,OACZC,UAAW,UAEbC,UAAW,CACTC,aAAc,GACdF,UAAW,YAIAG,IA/EH,WACV,MAAwCC,oBAAS,GAAjD,WAAOC,EAAP,KAAqBC,EAArB,KACA,OACE,eAAC,IAAD,CAAMC,MAAOjC,EAAOG,aAApB,UACE,cAAC,IAAD,CACE+B,cAAc,QACdC,aAAa,EACbC,QAASL,EACTM,eAAgB,WACdC,IAAMC,MAAM,0BACZP,GAAiBD,IANrB,SASE,cAAC,IAAD,CAAME,MAAOjC,EAAOG,aAApB,SACE,eAAC,IAAD,CAAM8B,MAAOjC,EAAOQ,UAApB,UACE,cAAC,IAAD,CAAMyB,MAAOjC,EAAO2B,UAApB,0BACA,cAAC,IAAD,CACEM,MAAO,CAACjC,EAAOoB,OAAQpB,EAAOsB,aAC9BkB,QAAS,kBAAMR,GAAiBD,IAFlC,SAIE,cAAC,IAAD,CAAME,MAAOjC,EAAOuB,UAApB,iCAKR,cAAC,IAAD,CACEU,MAAO,CAACjC,EAAOoB,OAAQpB,EAAOqB,YAC9BmB,QAAS,kBAAMR,GAAgB,IAFjC,SAIE,cAAC,IAAD,CAAMC,MAAOjC,EAAOuB,UAApB,+B","file":"static/js/app.b91459fa.chunk.js","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState } from \"react\";\nimport { Alert, Modal, StyleSheet, Text, Pressable, View } from \"react-native\";\n\nconst App = () => {\n  const [modalVisible, setModalVisible] = useState(false);\n  return (\n    <View style={styles.centeredView}>\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => {\n          Alert.alert(\"Modal has been closed.\");\n          setModalVisible(!modalVisible);\n        }}\n      >\n        <View style={styles.centeredView}>\n          <View style={styles.modalView}>\n            <Text style={styles.modalText}>Hello World!</Text>\n            <Pressable\n              style={[styles.button, styles.buttonClose]}\n              onPress={() => setModalVisible(!modalVisible)}\n            >\n              <Text style={styles.textStyle}>Hide Modal</Text>\n            </Pressable>\n          </View>\n        </View>\n      </Modal>\n      <Pressable\n        style={[styles.button, styles.buttonOpen]}\n        onPress={() => setModalVisible(true)}\n      >\n        <Text style={styles.textStyle}>Show Modal</Text>\n      </Pressable>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: \"#F194FF\",\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\",\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});\n\nexport default App;"],"sourceRoot":""}